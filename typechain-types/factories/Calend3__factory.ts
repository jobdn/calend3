/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Calend3, Calend3Interface } from "../Calend3";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "addAppointment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAppoinments",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "address",
            name: "attendee",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountPaid",
            type: "uint256",
          },
        ],
        internalType: "struct Calend3.Appointment[]",
        name: "_appointments",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100437ff1e7c4992f65820ebe346841273b589737a4e8340d241bdd409bb78250470c5560001b6100ed60201b60201c565b6100757f442f64242a3e83844647317e9c0347d8997d0a57c80cc898a2371d4c24ce23d960001b6100ed60201b60201c565b6100a77fcf6a4bb61d6de10794e1f4adba3defdf80bc4a3f593f36534e36c870cf5a6e6760001b6100ed60201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100f0565b50565b611515806100ff6000396000f3fe60806040526004361061003f5760003560e01c806334fcf43714610044578063679aefce1461006d5780639206b23014610098578063c9f92a67146100c3575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610d72565b6100df565b005b34801561007957600080fd5b506100826102ad565b60405161008f91906110a9565b60405180910390f35b3480156100a457600080fd5b506100ad61033b565b6040516100ba9190610fe7565b60405180910390f35b6100dd60048036038101906100d89190610d0b565b610524565b005b61010b7f190b44cfc80e731750699efcf675e55df326cc8ecc49ac1ccf1c6e6ddcb78a8960001b610be8565b6101377fb03c0d1a536834e2111854daaa7f2c6d505bcf8da3e89bfe1c0b261b21e8345060001b610be8565b6101637faa63fa4fb0085689ca47a23bd125c56cbfea7f9abda892df889af11fe4572ac060001b610be8565b61018f7f06fdbb4e37b7ba124ae1ef6eb66c86aae098d92650d4bf97bf7dc4494c642f5a60001b610be8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021690611029565b60405180910390fd5b61024b7fedae95c8541965f3a1d48e49376f34230eeb203c12a473b2f6ed0493c7c353e960001b610be8565b6102777f01f5ba68c132acbabaea713e992212e3840aebd99c00569e7e21a7202626043c60001b610be8565b6102a37f60ff60822d675ae99ba42a6f5e7ec93cb24927f1afd6960371f54497c4882b5d60001b610be8565b8060008190555050565b60006102db7f1eb39983804105247c4a1e6babaacc8ecaaa0a2f7c749c234caee911769d128f60001b610be8565b6103077f82e887f39ef5691bd5012524e8081a225d3db365cd2f4d73b749388bf43aacc660001b610be8565b6103337ffc4c8e555989f3ba1de2b50328af4c9fbe93e83535f5ed9713f2f1b23b40454f60001b610be8565b600054905090565b60606103697f8a04342745c06b9267cb848596407f11d328cee551eb1de26e1b5446f8d2c09e60001b610be8565b6103957fd72839464ee35f5d0a018c5c3d5bded1f6a39b6e1b8ba60a741aebdb1f44c19260001b610be8565b6103c17f56a23975debc6212ec08194f180eadd1dcd2bcbca1ec4e92683f55605417f4de60001b610be8565b6002805480602002602001604051908101604052809291908181526020016000905b8282101561051b57838290600052602060002090600502016040518060a0016040529081600082018054610416906112c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610442906112c8565b801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481525050815260200190600101906103e3565b50505050905090565b6105507f81d4e2e323e2968cac8ef81506270a003f6688e28409590f6670267d7916adaa60001b610be8565b61057c7f9ac9ccdc4a155df56f96fcfc0e58e958d0c5a315db4749f9592e4fbd42d36eb560001b610be8565b6105a87f23412db2b7d8fffc235ff2827566cb0a41c76eab62ce6d99c9b435cee0e236ad60001b610be8565b6105d47f873cadace33fa1bc1ef57a2e76e0188fdf6074886b3468ee337cec7584a6803860001b610be8565b600080541415610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061090611089565b60405180910390fd5b6106457f8c2ad575eeafbf9cd2f5b0596dd2dbbe2553602fb01a8772690296cada9eac8060001b610be8565b6106717ffb461241b43c1d59e075a806fb0b10b9eb02098443f144c43554a50e52fda56660001b610be8565b61069d7fbf8e7155c63f0ccf2a3fe3b2450853859e14d514347d2f26bd2bfb9faf00517d60001b610be8565b6106c97f1996e41aa870b1b1e07855f449b7baa508ae8dd44c0dc449e2f4a36ac724e13160001b610be8565b6000603c83836106d99190611216565b6106e3919061118b565b11610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071a90611049565b60405180910390fd5b61074f7fe5bdb15ff7cc318f81de39b915948fa75cfe527d7a122cd03bccfabde45969c260001b610be8565b61077b7f58a68f5c30bb720d29cc13fc46618bfc56474cfb9b49b38571f46292485250c360001b610be8565b6107a77ffc27d5e52dfb2693693b4b749bb6b2b38e479ab9edd42562943095f0b8bed63960001b610be8565b60006040518060a001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001600054603c86866107f39190611216565b6107fd919061118b565b61080791906111bc565b81525090506108387f17850c5dcf9e4dfea6318f7c45469b83ef40b47560db8728b195712e851f08ef60001b610be8565b6108647f1779cd88727027dee03af2b71c8de14dae9da61a740ba6db7ac7b3f7a9a55c0a60001b610be8565b6108907fa139cd717895b057fa4c24578be15be3a5c5fd4373ced228baab29ee55e0686460001b610be8565b80608001513410156108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90611009565b60405180910390fd5b6109037f757311cc755da2e8515ff5dc549af2cc78d464a78393d957f6689a628e82626d60001b610be8565b61092f7fdb3422065e23bd2422f872e22f0017279b207b088ca958f9508bc1311e17fd5460001b610be8565b61095b7f756c84a8bba2120b420ce2782dba293fab61178958b25ee39825231ac4de3ddf60001b610be8565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346040516109a390610fd2565b60006040518083038185875af1925050503d80600081146109e0576040519150601f19603f3d011682016040523d82523d6000602084013e6109e5565b606091505b50509050610a157f0227172a66519f81a47a5affe8d5ac02671e66085b1d56bbee004bac4a0aea8f60001b610be8565b610a417f7498fa2e2aa4905438ccec09d5573dbb5a8ec88726a73dc3840f27d489ee96bc60001b610be8565b610a6d7faad624a67e049ccd5d37eeba8b3ace9ba4224b46c4c04256822b9fdb5e6d9fad60001b610be8565b80610aad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa490611069565b60405180910390fd5b610ad97f75e38c3fd08719f5ded8e079bd946282489096ee652c117fc14be8481fb3479460001b610be8565b610b057fafc1e2c9f052713822f3044ed285cfc01f32b59b533bb669724d1251f4c8731760001b610be8565b610b317fb6220bf3578f9c3f447be6a74675f335b653f7c6cbfee802fd42ec9eb9a0bbf460001b610be8565b60028290806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190610b79929190610beb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015550505050505050565b50565b828054610bf7906112c8565b90600052602060002090601f016020900481019282610c195760008555610c60565b82601f10610c3257805160ff1916838001178555610c60565b82800160010185558215610c60579182015b82811115610c5f578251825591602001919060010190610c44565b5b509050610c6d9190610c71565b5090565b5b80821115610c8a576000816000905550600101610c72565b5090565b6000610ca1610c9c846110e9565b6110c4565b905082815260208101848484011115610cb957600080fd5b610cc4848285611286565b509392505050565b600082601f830112610cdd57600080fd5b8135610ced848260208601610c8e565b91505092915050565b600081359050610d05816114c8565b92915050565b600080600060608486031215610d2057600080fd5b600084013567ffffffffffffffff811115610d3a57600080fd5b610d4686828701610ccc565b9350506020610d5786828701610cf6565b9250506040610d6886828701610cf6565b9150509250925092565b600060208284031215610d8457600080fd5b6000610d9284828501610cf6565b91505092915050565b6000610da78383610f3e565b905092915050565b610db88161124a565b82525050565b6000610dc98261112a565b610dd3818561114d565b935083602082028501610de58561111a565b8060005b85811015610e215784840389528151610e028582610d9b565b9450610e0d83611140565b925060208a01995050600181019050610de9565b50829750879550505050505092915050565b6000610e3e82611135565b610e488185611169565b9350610e58818560208601611295565b610e61816113e7565b840191505092915050565b6000610e7960198361117a565b9150610e84826113f8565b602082019050919050565b6000610e9c60128361117a565b9150610ea782611421565b602082019050919050565b6000610ebf60158361117a565b9150610eca8261144a565b602082019050919050565b6000610ee260128361117a565b9150610eed82611473565b602082019050919050565b6000610f0560008361115e565b9150610f108261149c565b600082019050919050565b6000610f2860158361117a565b9150610f338261149f565b602082019050919050565b600060a0830160008301518482036000860152610f5b8282610e33565b9150506020830151610f706020860182610daf565b506040830151610f836040860182610fb4565b506060830151610f966060860182610fb4565b506080830151610fa96080860182610fb4565b508091505092915050565b610fbd8161127c565b82525050565b610fcc8161127c565b82525050565b6000610fdd82610ef8565b9150819050919050565b600060208201905081810360008301526110018184610dbe565b905092915050565b6000602082019050818103600083015261102281610e6c565b9050919050565b6000602082019050818103600083015261104281610e8f565b9050919050565b6000602082019050818103600083015261106281610eb2565b9050919050565b6000602082019050818103600083015261108281610ed5565b9050919050565b600060208201905081810360008301526110a281610f1b565b9050919050565b60006020820190506110be6000830184610fc3565b92915050565b60006110ce6110df565b90506110da82826112fa565b919050565b6000604051905090565b600067ffffffffffffffff821115611104576111036113b8565b5b61110d826113e7565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111968261127c565b91506111a18361127c565b9250826111b1576111b061135a565b5b828204905092915050565b60006111c78261127c565b91506111d28361127c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561120b5761120a61132b565b5b828202905092915050565b60006112218261127c565b915061122c8361127c565b92508282101561123f5761123e61132b565b5b828203905092915050565b60006112558261125c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156112b3578082015181840152602081019050611298565b838111156112c2576000848401525b50505050565b600060028204905060018216806112e057607f821691505b602082108114156112f4576112f3611389565b5b50919050565b611303826113e7565b810181811067ffffffffffffffff82111715611322576113216113b8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f43616c656e64333a2072657175697265206d6f72652065746800000000000000600082015250565b7f43616c656e64333a206e6f74206f776e65720000000000000000000000000000600082015250565b7f43616c656e64333a20696e76616c69642074696d650000000000000000000000600082015250565b7f43616c656e64333a2073656e64206661696c0000000000000000000000000000600082015250565b50565b7f43616c656e64333a2072617465206973207a65726f0000000000000000000000600082015250565b6114d18161127c565b81146114dc57600080fd5b5056fea264697066735822122095c7ca4dfe4d18a45f8b930ebbe10adc7f36d555c7321c125e4dc5a9fd295bce64736f6c63430008040033";

type Calend3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Calend3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Calend3__factory extends ContractFactory {
  constructor(...args: Calend3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Calend3> {
    return super.deploy(overrides || {}) as Promise<Calend3>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Calend3 {
    return super.attach(address) as Calend3;
  }
  override connect(signer: Signer): Calend3__factory {
    return super.connect(signer) as Calend3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Calend3Interface {
    return new utils.Interface(_abi) as Calend3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Calend3 {
    return new Contract(address, _abi, signerOrProvider) as Calend3;
  }
}
